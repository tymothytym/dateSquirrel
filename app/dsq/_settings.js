const defaults = { // dsq defaults
    start: new Date(), // first selectable day
    end: { // last selectable day
        d: new Date().getDate(),
        m: new Date().getMonth(),
        y: new Date().getFullYear() + 10
    },
    pattern: 'dx mmm yyyy', // visual output format (displayed in the input) 
    patternSave: 'yyyy,mm,dd', // data-date value output format 
    day: true, // if true then a day is selectable
    month: true, // if true then a month is selectable
    disableDates: false, // a list of Date objects or ranges [from, to] that define days to exclude as selectable
    markToday: true, // if true then the "today" indicator is shown
    primaryColour: '#1976d2', // sets main hover and CTA colour
    primaryTextColour: '#002171', // sets link and selected text colour
    textOnPrimaryColour: '#e1f5fe', // sets text colour when over CTA colour
    hideScrollbars: false, // if true then a scrollbars on year and month list are hidden (visual effect)
    activation: function() { // if the function evaluates to true when DOM loads then dateSquirrel activates
        if (window.screen.width > 319) {
            return true;
        } else {
            return false;
        }
    },
    callback: function() { // optional callback fired on date completion
        //console.log('Date set: ', this.date);
        //console.log('The input element: ', this.input);
        //console.log('The dateSquirrel wrapper: ', this.wrapper);
    },
    // dev options - break plugin if changed without modifying (s)css and / or html to account
    classPrefix: 'dsq-', // prefix JS-added classes - if changed styles rules must be updated
    dontWrap: false, // if true stops the input being wrapped in dateSquirrel html - this needs adding manually to the page instead
    cssContainerClass: 'dateSquirrel_css', // sets class for the style container generated by dateSquirrel
    breakpoint: '1024px' // specifies breakpoint - must match $dsq-breakpoint-desktop in _settings.scss
};

export default defaults;